CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(osmloader)

IF("$ENV{UBX_MODULES}" STREQUAL "")
    #fallback to default      
    SET(UBX_MODULES ${CMAKE_INSTALL_PREFIX}/lib/ubx)
    MESSAGE(STATUS "INFO: UBX_MODULES set as: ${UBX_MODULES}")
ELSE("$ENV{UBX_MODULES}" STREQUAL "")
    SET(UBX_MODULES $ENV{UBX_MODULES})
    MESSAGE(STATUS "INFO: UBX_MODULES set as: ${UBX_MODULES}")
ENDIF("$ENV{UBX_MODULES}" STREQUAL "")
    
SET(INSTALL_LIB_TYPES_DIR ${UBX_MODULES}/types CACHE PATH "Installation directory for types libraries")
SET(INSTALL_LIB_BLOCKS_DIR ${UBX_MODULES}/blocks CACHE PATH "Installation directory for blocks libraries")

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/external/cmake_modules")
FIND_PACKAGE(BRICS_3D REQUIRED)
FIND_PACKAGE(Microblx REQUIRED)
FIND_PACKAGE(Eigen REQUIRED)
FIND_PACKAGE(Xerces REQUIRED)
FIND_PACKAGE(Boost COMPONENTS regex)
ADD_DEFINITIONS(-DEIGEN3)

# add include directories (-I)
INCLUDE_DIRECTORIES(${BRICS_3D_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${MICROBLX_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${EIGEN_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${XERCES_INCLUDE_DIR})

# add library directories (-L)
LINK_DIRECTORIES(${BRICS_3D_LINK_DIRECTORIES})

# compile and link the executables
ADD_LIBRARY(osmloader SHARED osmloader.cpp)
SET_TARGET_PROPERTIES(osmloader PROPERTIES PREFIX "")

IF(USE_OSG) 
    TARGET_LINK_LIBRARIES(osmloader ${BRICS_3D_LIBRARIES} ${MICROBLX_LIBRARIES} ${OSG_LIBRARIES} ${XERCES_LIBRARIES} ${Boost_LIBRARIES})
ELSE(USE_OSG)
    TARGET_LINK_LIBRARIES(osmloader ${BRICS_3D_LIBRARIES} ${MICROBLX_LIBRARIES} ${XERCES_LIBRARIES} ${Boost_LIBRARIES}) 
ENDIF(USE_OSG)

# Install osmloader
install(TARGETS osmloader DESTINATION ${INSTALL_LIB_BLOCKS_DIR} EXPORT osmloader-block)
set_property(TARGET osmloader PROPERTY INSTALL_RPATH_USE_LINK_PATH TRUE)
install(EXPORT osmloader-block DESTINATION ${INSTALL_CMAKE_DIR})
