CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(roifilter)


IF("$ENV{UBX_MODULES}" STREQUAL "")
    #fallback to default      
    SET(UBX_MODULES ${CMAKE_INSTALL_PREFIX}/lib/ubx)
    MESSAGE(STATUS "INFO: UBX_MODULES set as: ${UBX_MODULES}")
ELSE("$ENV{UBX_MODULES}" STREQUAL "")
    SET(UBX_MODULES $ENV{UBX_MODULES})
    MESSAGE(STATUS "INFO: UBX_MODULES set as: ${UBX_MODULES}")
ENDIF("$ENV{UBX_MODULES}" STREQUAL "")
    
SET(INSTALL_LIB_TYPES_DIR ${UBX_MODULES}/types CACHE PATH "Installation directory for types libraries")
SET(INSTALL_LIB_BLOCKS_DIR ${UBX_MODULES}/blocks CACHE PATH "Installation directory for blocks libraries")


SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/external/cmake_modules")
FIND_PACKAGE(BRICS_3D REQUIRED)
FIND_PACKAGE(Microblx REQUIRED)
#FIND_PACKAGE(Eigen REQUIRED)
#ADD_DEFINITIONS(-DEIGEN3)

# add include directories (-I)
INCLUDE_DIRECTORIES(${BRICS_3D_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${MICROBLX_INCLUDE_DIR})
#INCLUDE_DIRECTORIES(${EIGEN_INCLUDE_DIR})

# add library directories (-L)
LINK_DIRECTORIES(${BRICS_3D_LINK_DIRECTORIES})

# compile and link the executables
ADD_LIBRARY(rsg_types SHARED rsg_types)
SET_TARGET_PROPERTIES(rsg_types PROPERTIES PREFIX "") 
TARGET_LINK_LIBRARIES(rsg_types ${MICROBLX_LIBRARIES})

#install(TARGETS rsg_types DEFINITION ${INSTALL_LIB_TYPES_DIR}) #${INSTALL_LIB_TYPES_DIR})

install(TARGETS rsg_types 
    LIBRARY DESTINATION ${INSTALL_LIB_TYPES_DIR}
    RUNTIME DESTINATION ${INSTALL_LIB_TYPES_DIR}
    LIBRARY DESTINATION ${INSTALL_LIB_TYPES_DIR}
    ARCHIVE DESTINATION ${INSTALL_LIB_TYPES_DIR}
)    
#set_property(TARGET rsg_types PROPERTY INSTALL_RPATH_USE_LINK_PATH TRUE)
#install(EXPORT rsg_types-type DESTINATION ${INSTALL_CMAKE_DIR})

#-fvisibility=hidden will pervent symbols to be found via lua ffi :-(
SET(CMAKE_CXX_FLAGS "-Wall -Werror")# -fvisibility=hidden")
ADD_LIBRARY(world_model SHARED WorldModelLuaBinding)
SET_TARGET_PROPERTIES(world_model PROPERTIES PREFIX "") 
TARGET_LINK_LIBRARIES(world_model ${BRICS_3D_LIBRARIES})

