CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(pointcloudloader)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/external/cmake_modules")
FIND_PACKAGE(BRICS_3D REQUIRED)
FIND_PACKAGE(Boost COMPONENTS regex)
FIND_PACKAGE(Microblx REQUIRED)
FIND_PACKAGE(Eigen REQUIRED)
FIND_PACKAGE(OpenSceneGraph COMPONENTS osgGA osgUtil osgViewer osgText)
ADD_DEFINITIONS(-DEIGEN3)

# search for open scene graph (OSG) visualization library
OPTION(USE_OSG "Enable Open Scene Graph" OFF)
IF(USE_OSG)
    SET(OSG_LIBRARIES "") 
    IF (OPENSCENEGRAPH_FOUND)
    	message(STATUS "SUCCESSFUL: OpenSceneGraph found")
    	ADD_DEFINITIONS(-DENABLE_OSG)
    	list(APPEND OSG_LIBRARIES
    	    ${OSG_LIBRARY_DEBUG}
        	${OSGGA_LIBRARY_DEBUG}
        	${OSGVIEWER_LIBRARY_DEBUG}
        	${OSGUTIL_LIBRARY_DEBUG}
        	${OSGTEXT_LIBRARY_DEBUG}
        )	
    ENDIF (OPENSCENEGRAPH_FOUND)
ENDIF(USE_OSG)

#SET(Boost_USE_STATIC_LIBS ON)
#SET(Boost_ADDITIONAL_VERSIONS "1.39" "1.39.0" "1.40" "1.40.0" "1.41" "1.41.0"  "1.42" "1.42.0")
#FIND_PACKAGE(Boost COMPONENTS thread)
#IF (NOT Boost_INCLUDE_DIR)
#  MESSAGE(SEND_ERROR "WARNING: Boost not found")
#ELSE (NOT Boost_INCLUDE_DIR) 
#  MESSAGE(STATUS "SUCCESSFUL: Boost found")
#ENDIF()

# add include directories (-I)
INCLUDE_DIRECTORIES(${BRICS_3D_INCLUDE_DIRS})
INCLUDE_DIRECTORIES(${MICROBLX_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${EIGEN_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${OSG_INCLUDE_DIR})

# add library directories (-L)
LINK_DIRECTORIES(${BRICS_3D_LINK_DIRECTORIES})

# compile and link the executables
ADD_LIBRARY(pointcloudloader SHARED pointcloudloader.cpp)
SET_TARGET_PROPERTIES(pointcloudloader PROPERTIES PREFIX "")

IF(USE_OSG) 
    TARGET_LINK_LIBRARIES(pointcloudloader ${Boost_LIBRARIES} ${BRICS_3D_LIBRARIES} ${MICROBLX_LIBRARIES} ${OSG_LIBRARIES})
ELSE(USE_OSG)
    TARGET_LINK_LIBRARIES(pointcloudloader ${Boost_LIBRARIES} ${BRICS_3D_LIBRARIES} ${MICROBLX_LIBRARIES}) 
ENDIF(USE_OSG)