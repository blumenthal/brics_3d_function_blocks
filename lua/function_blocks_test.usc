-- -*- mode: lua; -*-

local bd = require("blockdiagram")
local rsg = require("rsg")
local fbx_path = os.getenv("BRICS_3D_FUNCTION_BLOCKS_DIR") .. "/" 

myWm = rsg.WorldModel()

return bd.system
{
   imports = {
      "std_types/stdtypes/stdtypes.so",
 --     "std_blocks/webif/webif.so",
      "std_blocks/ptrig/ptrig.so",
      "std_blocks/logging/file_logger.so",
      "std_blocks/lfds_buffers/lfds_cyclic.so",
      "std_blocks/ptrig/ptrig.so",
      
      fbx_path .. "lib/rsg_types.so",
      fbx_path .. "lib/roifilter.so",
      fbx_path .. "lib/octreefilter.so",
      fbx_path .. "lib/pointcloudloader.so",
	
      
   },

   blocks = {
      { name="pointcloudloader_1", type="pointcloudloader/pointcloudloader" },
      { name="roifilter_1", type="roifilter/roifilter" },
      { name="ptrig1", type="std_triggers/ptrig" },

   },

   connections = {
      { src="pointcloudloader_1.outputDataIds", tgt="roifilter_1.inputDataIds" },
   },

   configurations = {
      { name="pointcloudloader_1", config =  { wm_handle={wm = myWm:getHandle().wm}} },
      { name="roifilter_1", config = { wm_handle={wm = myWm:getHandle().wm}, max_x="2" },
      { name="ptrig1", config = { period = {sec=1, usec=000000 }, trig_blocks={
										{ b="#pointcloudloader_1", num_steps=1, measure=0 },
										{ b="#roifilter_1", num_steps=1, measure=0 } } } }}
   },
}